steps:
  # Optimize builds by downloading the previous image.
  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["pull", "eu.gcr.io/echie-prod/lounas:latest"]
  - name: "gcr.io/cloud-builders/docker"
    args: [
        "build",
        "-t",
        "eu.gcr.io/echie-prod/lounas:$SHORT_SHA",
        # "--cache-from",
        # "eu.gcr.io/echie-prod/lounas:latest",
        "--build-arg",
        "GIT_COMMIT=$SHORT_SHA",
        ".",
      ]
  - name: "gcr.io/cloud-builders/docker"
    args: ["tag", "eu.gcr.io/echie-prod/lounas:$SHORT_SHA", "eu.gcr.io/echie-prod/lounas:latest"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "eu.gcr.io/echie-prod/lounas:$SHORT_SHA"]
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "kubernetes/"
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "set"
      - "image"
      - "deployment/lounas"
      - "lounas=eu.gcr.io/echie-prod/lounas:$SHORT_SHA"
images:
  - "eu.gcr.io/echie-prod/lounas:$SHORT_SHA"
  - "eu.gcr.io/echie-prod/lounas:latest"
options:
  env:
    - "CLOUDSDK_COMPUTE_ZONE=europe-north1-a"
    - "CLOUDSDK_CONTAINER_CLUSTER=cluster-1"
